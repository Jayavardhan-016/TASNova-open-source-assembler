🗄️ Phase-2: Register File – 32-bit General Purpose Register Bank
The Register File module is a core component of our custom processor’s execution infrastructure.
It consists of 256 general-purpose 32-bit registers accessible via read and write ports. 
This module is fully synthesizable and designed for high flexibility in data storage and access.

✅ Features
256×32-bit registers for wide data storage.

Dual write-port support:
Allows simultaneous updates to two different registers.

Fully synchronous reset:
Resets all registers to zero.

Continuous combinational read:-
Always provides real-time access to the current values of all 256 registers.

🔁 Inputs
Signal	Width	Description
clk	          1      bit	    System clock. All updates happen on its edge.
rst          	1      bit	    Resets the entire register file to zeros.
write_en    	1      bit	    Write enable signal for addr1.
write_en2	    1      bit	    Write enable signal for addr2.
addr1	        8      bits	    Address of register to write data1.
addr2	        8      bits	    Address of register to write data2.
data1	        32     bits	    Data to write into register addr1.
data2	        32     bits	    Data to write into register addr2.

📤 Outputs
Signal	Width	Description
regfile_out	256 × 32 bits	Provides current values of all 256 registers.

⚙️ Internal Functionality
Synchronous Reset Logic:
On reset, all 256 registers are initialized to 0.

Dual-Port Write:
Allows simultaneous writes to two different registers during a single clock cycle if both write_en and write_en2 are asserted.

Combinational Read:
The entire register file content is always available via regfile_out, which makes it suitable for real-time display, debug, or ALU access.

📁 Integration Role
Feeds operands to the ALU (using address-based access).
Stores the results computed by the ALU (via write-back mechanism).
Required by Instruction Decoder to map operand addresses.

